/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FlowSetRequest;
import org.openapitools.client.model.GeoipBindingEnum;
import org.openapitools.client.model.NetworkBindingEnum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserLoginStage Serializer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-25T23:12:57.050901581-03:00[America/Argentina/Cordoba]", comments = "Generator version: 7.8.0")
public class UserLoginStageRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FLOW_SET = "flow_set";
  @SerializedName(SERIALIZED_NAME_FLOW_SET)
  private List<FlowSetRequest> flowSet = new ArrayList<>();

  public static final String SERIALIZED_NAME_SESSION_DURATION = "session_duration";
  @SerializedName(SERIALIZED_NAME_SESSION_DURATION)
  private String sessionDuration;

  public static final String SERIALIZED_NAME_TERMINATE_OTHER_SESSIONS = "terminate_other_sessions";
  @SerializedName(SERIALIZED_NAME_TERMINATE_OTHER_SESSIONS)
  private Boolean terminateOtherSessions;

  public static final String SERIALIZED_NAME_REMEMBER_ME_OFFSET = "remember_me_offset";
  @SerializedName(SERIALIZED_NAME_REMEMBER_ME_OFFSET)
  private String rememberMeOffset;

  public static final String SERIALIZED_NAME_NETWORK_BINDING = "network_binding";
  @SerializedName(SERIALIZED_NAME_NETWORK_BINDING)
  private NetworkBindingEnum networkBinding;

  public static final String SERIALIZED_NAME_GEOIP_BINDING = "geoip_binding";
  @SerializedName(SERIALIZED_NAME_GEOIP_BINDING)
  private GeoipBindingEnum geoipBinding;

  public UserLoginStageRequest() {
  }

  public UserLoginStageRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UserLoginStageRequest flowSet(List<FlowSetRequest> flowSet) {
    this.flowSet = flowSet;
    return this;
  }

  public UserLoginStageRequest addFlowSetItem(FlowSetRequest flowSetItem) {
    if (this.flowSet == null) {
      this.flowSet = new ArrayList<>();
    }
    this.flowSet.add(flowSetItem);
    return this;
  }

  /**
   * Get flowSet
   * @return flowSet
   */
  @javax.annotation.Nullable
  public List<FlowSetRequest> getFlowSet() {
    return flowSet;
  }

  public void setFlowSet(List<FlowSetRequest> flowSet) {
    this.flowSet = flowSet;
  }


  public UserLoginStageRequest sessionDuration(String sessionDuration) {
    this.sessionDuration = sessionDuration;
    return this;
  }

  /**
   * Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours&#x3D;-1;minutes&#x3D;-2;seconds&#x3D;-3)
   * @return sessionDuration
   */
  @javax.annotation.Nullable
  public String getSessionDuration() {
    return sessionDuration;
  }

  public void setSessionDuration(String sessionDuration) {
    this.sessionDuration = sessionDuration;
  }


  public UserLoginStageRequest terminateOtherSessions(Boolean terminateOtherSessions) {
    this.terminateOtherSessions = terminateOtherSessions;
    return this;
  }

  /**
   * Terminate all other sessions of the user logging in.
   * @return terminateOtherSessions
   */
  @javax.annotation.Nullable
  public Boolean getTerminateOtherSessions() {
    return terminateOtherSessions;
  }

  public void setTerminateOtherSessions(Boolean terminateOtherSessions) {
    this.terminateOtherSessions = terminateOtherSessions;
  }


  public UserLoginStageRequest rememberMeOffset(String rememberMeOffset) {
    this.rememberMeOffset = rememberMeOffset;
    return this;
  }

  /**
   * Offset the session will be extended by when the user picks the remember me option. Default of 0 means that the remember me option will not be shown. (Format: hours&#x3D;-1;minutes&#x3D;-2;seconds&#x3D;-3)
   * @return rememberMeOffset
   */
  @javax.annotation.Nullable
  public String getRememberMeOffset() {
    return rememberMeOffset;
  }

  public void setRememberMeOffset(String rememberMeOffset) {
    this.rememberMeOffset = rememberMeOffset;
  }


  public UserLoginStageRequest networkBinding(NetworkBindingEnum networkBinding) {
    this.networkBinding = networkBinding;
    return this;
  }

  /**
   * Bind sessions created by this stage to the configured network
   * @return networkBinding
   */
  @javax.annotation.Nullable
  public NetworkBindingEnum getNetworkBinding() {
    return networkBinding;
  }

  public void setNetworkBinding(NetworkBindingEnum networkBinding) {
    this.networkBinding = networkBinding;
  }


  public UserLoginStageRequest geoipBinding(GeoipBindingEnum geoipBinding) {
    this.geoipBinding = geoipBinding;
    return this;
  }

  /**
   * Bind sessions created by this stage to the configured GeoIP location
   * @return geoipBinding
   */
  @javax.annotation.Nullable
  public GeoipBindingEnum getGeoipBinding() {
    return geoipBinding;
  }

  public void setGeoipBinding(GeoipBindingEnum geoipBinding) {
    this.geoipBinding = geoipBinding;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserLoginStageRequest userLoginStageRequest = (UserLoginStageRequest) o;
    return Objects.equals(this.name, userLoginStageRequest.name) &&
        Objects.equals(this.flowSet, userLoginStageRequest.flowSet) &&
        Objects.equals(this.sessionDuration, userLoginStageRequest.sessionDuration) &&
        Objects.equals(this.terminateOtherSessions, userLoginStageRequest.terminateOtherSessions) &&
        Objects.equals(this.rememberMeOffset, userLoginStageRequest.rememberMeOffset) &&
        Objects.equals(this.networkBinding, userLoginStageRequest.networkBinding) &&
        Objects.equals(this.geoipBinding, userLoginStageRequest.geoipBinding);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, flowSet, sessionDuration, terminateOtherSessions, rememberMeOffset, networkBinding, geoipBinding);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserLoginStageRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    flowSet: ").append(toIndentedString(flowSet)).append("\n");
    sb.append("    sessionDuration: ").append(toIndentedString(sessionDuration)).append("\n");
    sb.append("    terminateOtherSessions: ").append(toIndentedString(terminateOtherSessions)).append("\n");
    sb.append("    rememberMeOffset: ").append(toIndentedString(rememberMeOffset)).append("\n");
    sb.append("    networkBinding: ").append(toIndentedString(networkBinding)).append("\n");
    sb.append("    geoipBinding: ").append(toIndentedString(geoipBinding)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("flow_set");
    openapiFields.add("session_duration");
    openapiFields.add("terminate_other_sessions");
    openapiFields.add("remember_me_offset");
    openapiFields.add("network_binding");
    openapiFields.add("geoip_binding");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserLoginStageRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserLoginStageRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserLoginStageRequest is not found in the empty JSON string", UserLoginStageRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserLoginStageRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserLoginStageRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserLoginStageRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("flow_set") != null && !jsonObj.get("flow_set").isJsonNull()) {
        JsonArray jsonArrayflowSet = jsonObj.getAsJsonArray("flow_set");
        if (jsonArrayflowSet != null) {
          // ensure the json data is an array
          if (!jsonObj.get("flow_set").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `flow_set` to be an array in the JSON string but got `%s`", jsonObj.get("flow_set").toString()));
          }

          // validate the optional field `flow_set` (array)
          for (int i = 0; i < jsonArrayflowSet.size(); i++) {
            FlowSetRequest.validateJsonElement(jsonArrayflowSet.get(i));
          };
        }
      }
      if ((jsonObj.get("session_duration") != null && !jsonObj.get("session_duration").isJsonNull()) && !jsonObj.get("session_duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `session_duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("session_duration").toString()));
      }
      if ((jsonObj.get("remember_me_offset") != null && !jsonObj.get("remember_me_offset").isJsonNull()) && !jsonObj.get("remember_me_offset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remember_me_offset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remember_me_offset").toString()));
      }
      // validate the optional field `network_binding`
      if (jsonObj.get("network_binding") != null && !jsonObj.get("network_binding").isJsonNull()) {
        NetworkBindingEnum.validateJsonElement(jsonObj.get("network_binding"));
      }
      // validate the optional field `geoip_binding`
      if (jsonObj.get("geoip_binding") != null && !jsonObj.get("geoip_binding").isJsonNull()) {
        GeoipBindingEnum.validateJsonElement(jsonObj.get("geoip_binding"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserLoginStageRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserLoginStageRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserLoginStageRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserLoginStageRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UserLoginStageRequest>() {
           @Override
           public void write(JsonWriter out, UserLoginStageRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserLoginStageRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserLoginStageRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserLoginStageRequest
   * @throws IOException if the JSON string is invalid with respect to UserLoginStageRequest
   */
  public static UserLoginStageRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserLoginStageRequest.class);
  }

  /**
   * Convert an instance of UserLoginStageRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

