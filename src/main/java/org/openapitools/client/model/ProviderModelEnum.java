/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ProviderModelEnum
 */
@JsonAdapter(ProviderModelEnum.Adapter.class)
public enum ProviderModelEnum {
  
  GOOGLE_WORKSPACE_GOOGLEWORKSPACEPROVIDER("authentik_providers_google_workspace.googleworkspaceprovider"),
  
  LDAP_LDAPPROVIDER("authentik_providers_ldap.ldapprovider"),
  
  MICROSOFT_ENTRA_MICROSOFTENTRAPROVIDER("authentik_providers_microsoft_entra.microsoftentraprovider"),
  
  OAUTH2_OAUTH2PROVIDER("authentik_providers_oauth2.oauth2provider"),
  
  PROXY_PROXYPROVIDER("authentik_providers_proxy.proxyprovider"),
  
  RAC_RACPROVIDER("authentik_providers_rac.racprovider"),
  
  RADIUS_RADIUSPROVIDER("authentik_providers_radius.radiusprovider"),
  
  SAML_SAMLPROVIDER("authentik_providers_saml.samlprovider"),
  
  SCIM_SCIMPROVIDER("authentik_providers_scim.scimprovider");

  private String value;

  ProviderModelEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ProviderModelEnum fromValue(String value) {
    for (ProviderModelEnum b : ProviderModelEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ProviderModelEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final ProviderModelEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ProviderModelEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ProviderModelEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ProviderModelEnum.fromValue(value);
  }
}

