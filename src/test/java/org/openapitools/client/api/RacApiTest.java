/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConnectionToken;
import org.openapitools.client.model.ConnectionTokenRequest;
import org.openapitools.client.model.Endpoint;
import org.openapitools.client.model.EndpointRequest;
import org.openapitools.client.model.GenericError;
import org.openapitools.client.model.PaginatedConnectionTokenList;
import org.openapitools.client.model.PaginatedEndpointList;
import org.openapitools.client.model.PatchedConnectionTokenRequest;
import org.openapitools.client.model.PatchedEndpointRequest;
import java.util.UUID;
import org.openapitools.client.model.UsedBy;
import org.openapitools.client.model.ValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RacApi
 */
@Disabled
public class RacApiTest {

    private final RacApi api = new RacApi();

    /**
     * ConnectionToken Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensDestroyTest() throws ApiException {
        UUID connectionTokenUuid = null;
        api.racConnectionTokensDestroy(connectionTokenUuid);
        // TODO: test validations
    }

    /**
     * ConnectionToken Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensListTest() throws ApiException {
        UUID endpoint = null;
        String ordering = null;
        Integer page = null;
        Integer pageSize = null;
        Integer provider = null;
        String search = null;
        Integer sessionUser = null;
        PaginatedConnectionTokenList response = api.racConnectionTokensList(endpoint, ordering, page, pageSize, provider, search, sessionUser);
        // TODO: test validations
    }

    /**
     * ConnectionToken Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensPartialUpdateTest() throws ApiException {
        UUID connectionTokenUuid = null;
        PatchedConnectionTokenRequest patchedConnectionTokenRequest = null;
        ConnectionToken response = api.racConnectionTokensPartialUpdate(connectionTokenUuid, patchedConnectionTokenRequest);
        // TODO: test validations
    }

    /**
     * ConnectionToken Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensRetrieveTest() throws ApiException {
        UUID connectionTokenUuid = null;
        ConnectionToken response = api.racConnectionTokensRetrieve(connectionTokenUuid);
        // TODO: test validations
    }

    /**
     * ConnectionToken Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensUpdateTest() throws ApiException {
        UUID connectionTokenUuid = null;
        ConnectionTokenRequest connectionTokenRequest = null;
        ConnectionToken response = api.racConnectionTokensUpdate(connectionTokenUuid, connectionTokenRequest);
        // TODO: test validations
    }

    /**
     * Get a list of all objects that use this object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racConnectionTokensUsedByListTest() throws ApiException {
        UUID connectionTokenUuid = null;
        List<UsedBy> response = api.racConnectionTokensUsedByList(connectionTokenUuid);
        // TODO: test validations
    }

    /**
     * Endpoint Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsCreateTest() throws ApiException {
        EndpointRequest endpointRequest = null;
        Endpoint response = api.racEndpointsCreate(endpointRequest);
        // TODO: test validations
    }

    /**
     * Endpoint Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsDestroyTest() throws ApiException {
        UUID pbmUuid = null;
        api.racEndpointsDestroy(pbmUuid);
        // TODO: test validations
    }

    /**
     * List accessible endpoints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsListTest() throws ApiException {
        String name = null;
        String ordering = null;
        Integer page = null;
        Integer pageSize = null;
        Integer provider = null;
        String search = null;
        Boolean superuserFullList = null;
        PaginatedEndpointList response = api.racEndpointsList(name, ordering, page, pageSize, provider, search, superuserFullList);
        // TODO: test validations
    }

    /**
     * Endpoint Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsPartialUpdateTest() throws ApiException {
        UUID pbmUuid = null;
        PatchedEndpointRequest patchedEndpointRequest = null;
        Endpoint response = api.racEndpointsPartialUpdate(pbmUuid, patchedEndpointRequest);
        // TODO: test validations
    }

    /**
     * Endpoint Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsRetrieveTest() throws ApiException {
        UUID pbmUuid = null;
        Endpoint response = api.racEndpointsRetrieve(pbmUuid);
        // TODO: test validations
    }

    /**
     * Endpoint Viewset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsUpdateTest() throws ApiException {
        UUID pbmUuid = null;
        EndpointRequest endpointRequest = null;
        Endpoint response = api.racEndpointsUpdate(pbmUuid, endpointRequest);
        // TODO: test validations
    }

    /**
     * Get a list of all objects that use this object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void racEndpointsUsedByListTest() throws ApiException {
        UUID pbmUuid = null;
        List<UsedBy> response = api.racEndpointsUsedByList(pbmUuid);
        // TODO: test validations
    }

}
