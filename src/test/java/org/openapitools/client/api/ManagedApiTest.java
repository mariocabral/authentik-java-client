/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BlueprintFile;
import org.openapitools.client.model.BlueprintInstance;
import org.openapitools.client.model.BlueprintInstanceRequest;
import org.openapitools.client.model.GenericError;
import org.openapitools.client.model.PaginatedBlueprintInstanceList;
import org.openapitools.client.model.PatchedBlueprintInstanceRequest;
import java.util.UUID;
import org.openapitools.client.model.UsedBy;
import org.openapitools.client.model.ValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedApi
 */
@Disabled
public class ManagedApiTest {

    private final ManagedApi api = new ManagedApi();

    /**
     * Apply a blueprint
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsApplyCreateTest() throws ApiException {
        UUID instanceUuid = null;
        BlueprintInstance response = api.managedBlueprintsApplyCreate(instanceUuid);
        // TODO: test validations
    }

    /**
     * Get blueprints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsAvailableListTest() throws ApiException {
        List<BlueprintFile> response = api.managedBlueprintsAvailableList();
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsCreateTest() throws ApiException {
        BlueprintInstanceRequest blueprintInstanceRequest = null;
        BlueprintInstance response = api.managedBlueprintsCreate(blueprintInstanceRequest);
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsDestroyTest() throws ApiException {
        UUID instanceUuid = null;
        api.managedBlueprintsDestroy(instanceUuid);
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsListTest() throws ApiException {
        String name = null;
        String ordering = null;
        Integer page = null;
        Integer pageSize = null;
        String path = null;
        String search = null;
        PaginatedBlueprintInstanceList response = api.managedBlueprintsList(name, ordering, page, pageSize, path, search);
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsPartialUpdateTest() throws ApiException {
        UUID instanceUuid = null;
        PatchedBlueprintInstanceRequest patchedBlueprintInstanceRequest = null;
        BlueprintInstance response = api.managedBlueprintsPartialUpdate(instanceUuid, patchedBlueprintInstanceRequest);
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsRetrieveTest() throws ApiException {
        UUID instanceUuid = null;
        BlueprintInstance response = api.managedBlueprintsRetrieve(instanceUuid);
        // TODO: test validations
    }

    /**
     * Blueprint instances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsUpdateTest() throws ApiException {
        UUID instanceUuid = null;
        BlueprintInstanceRequest blueprintInstanceRequest = null;
        BlueprintInstance response = api.managedBlueprintsUpdate(instanceUuid, blueprintInstanceRequest);
        // TODO: test validations
    }

    /**
     * Get a list of all objects that use this object
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void managedBlueprintsUsedByListTest() throws ApiException {
        UUID instanceUuid = null;
        List<UsedBy> response = api.managedBlueprintsUsedByList(instanceUuid);
        // TODO: test validations
    }

}
