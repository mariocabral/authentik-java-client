/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.OpenIDConnectConfiguration;
import org.openapitools.client.model.ProxyMode;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProxyOutpostConfig
 */
public class ProxyOutpostConfigTest {
    private final ProxyOutpostConfig model = new ProxyOutpostConfig();

    /**
     * Model tests for ProxyOutpostConfig
     */
    @Test
    public void testProxyOutpostConfig() {
        // TODO: test ProxyOutpostConfig
    }

    /**
     * Test the property 'pk'
     */
    @Test
    public void pkTest() {
        // TODO: test pk
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'internalHost'
     */
    @Test
    public void internalHostTest() {
        // TODO: test internalHost
    }

    /**
     * Test the property 'externalHost'
     */
    @Test
    public void externalHostTest() {
        // TODO: test externalHost
    }

    /**
     * Test the property 'internalHostSslValidation'
     */
    @Test
    public void internalHostSslValidationTest() {
        // TODO: test internalHostSslValidation
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

    /**
     * Test the property 'oidcConfiguration'
     */
    @Test
    public void oidcConfigurationTest() {
        // TODO: test oidcConfiguration
    }

    /**
     * Test the property 'cookieSecret'
     */
    @Test
    public void cookieSecretTest() {
        // TODO: test cookieSecret
    }

    /**
     * Test the property 'certificate'
     */
    @Test
    public void certificateTest() {
        // TODO: test certificate
    }

    /**
     * Test the property 'skipPathRegex'
     */
    @Test
    public void skipPathRegexTest() {
        // TODO: test skipPathRegex
    }

    /**
     * Test the property 'basicAuthEnabled'
     */
    @Test
    public void basicAuthEnabledTest() {
        // TODO: test basicAuthEnabled
    }

    /**
     * Test the property 'basicAuthPasswordAttribute'
     */
    @Test
    public void basicAuthPasswordAttributeTest() {
        // TODO: test basicAuthPasswordAttribute
    }

    /**
     * Test the property 'basicAuthUserAttribute'
     */
    @Test
    public void basicAuthUserAttributeTest() {
        // TODO: test basicAuthUserAttribute
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'cookieDomain'
     */
    @Test
    public void cookieDomainTest() {
        // TODO: test cookieDomain
    }

    /**
     * Test the property 'accessTokenValidity'
     */
    @Test
    public void accessTokenValidityTest() {
        // TODO: test accessTokenValidity
    }

    /**
     * Test the property 'interceptHeaderAuth'
     */
    @Test
    public void interceptHeaderAuthTest() {
        // TODO: test interceptHeaderAuth
    }

    /**
     * Test the property 'scopesToRequest'
     */
    @Test
    public void scopesToRequestTest() {
        // TODO: test scopesToRequest
    }

    /**
     * Test the property 'assignedApplicationSlug'
     */
    @Test
    public void assignedApplicationSlugTest() {
        // TODO: test assignedApplicationSlug
    }

    /**
     * Test the property 'assignedApplicationName'
     */
    @Test
    public void assignedApplicationNameTest() {
        // TODO: test assignedApplicationName
    }

}
