/*
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.6.3
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AccessDeniedChallenge;
import org.openapitools.client.model.AppleLoginChallenge;
import org.openapitools.client.model.AuthenticatorDuoChallenge;
import org.openapitools.client.model.AuthenticatorSMSChallenge;
import org.openapitools.client.model.AuthenticatorStaticChallenge;
import org.openapitools.client.model.AuthenticatorTOTPChallenge;
import org.openapitools.client.model.AuthenticatorValidationChallenge;
import org.openapitools.client.model.AuthenticatorWebAuthnChallenge;
import org.openapitools.client.model.AutosubmitChallenge;
import org.openapitools.client.model.CaptchaChallenge;
import org.openapitools.client.model.ChallengeChoices;
import org.openapitools.client.model.ConsentChallenge;
import org.openapitools.client.model.ConsentPermission;
import org.openapitools.client.model.ContextualFlowInfo;
import org.openapitools.client.model.DeviceChallenge;
import org.openapitools.client.model.EmailChallenge;
import org.openapitools.client.model.ErrorDetail;
import org.openapitools.client.model.FlowDesignationEnum;
import org.openapitools.client.model.FlowErrorChallenge;
import org.openapitools.client.model.IdentificationChallenge;
import org.openapitools.client.model.LoginSource;
import org.openapitools.client.model.OAuthDeviceCodeChallenge;
import org.openapitools.client.model.OAuthDeviceCodeFinishChallenge;
import org.openapitools.client.model.PasswordChallenge;
import org.openapitools.client.model.PlexAuthenticationChallenge;
import org.openapitools.client.model.PromptChallenge;
import org.openapitools.client.model.RedirectChallenge;
import org.openapitools.client.model.SelectableStage;
import org.openapitools.client.model.ShellChallenge;
import org.openapitools.client.model.StagePrompt;
import org.openapitools.client.model.UserLoginChallenge;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ChallengeTypes
 */
public class ChallengeTypesTest {
    private final ChallengeTypes model = new ChallengeTypes();

    /**
     * Model tests for ChallengeTypes
     */
    @Test
    public void testChallengeTypes() {
        // TODO: test ChallengeTypes
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'flowInfo'
     */
    @Test
    public void flowInfoTest() {
        // TODO: test flowInfo
    }

    /**
     * Test the property 'component'
     */
    @Test
    public void componentTest() {
        // TODO: test component
    }

    /**
     * Test the property 'responseErrors'
     */
    @Test
    public void responseErrorsTest() {
        // TODO: test responseErrors
    }

    /**
     * Test the property 'pendingUser'
     */
    @Test
    public void pendingUserTest() {
        // TODO: test pendingUser
    }

    /**
     * Test the property 'pendingUserAvatar'
     */
    @Test
    public void pendingUserAvatarTest() {
        // TODO: test pendingUserAvatar
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'redirectUri'
     */
    @Test
    public void redirectUriTest() {
        // TODO: test redirectUri
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'activationBarcode'
     */
    @Test
    public void activationBarcodeTest() {
        // TODO: test activationBarcode
    }

    /**
     * Test the property 'activationCode'
     */
    @Test
    public void activationCodeTest() {
        // TODO: test activationCode
    }

    /**
     * Test the property 'stageUuid'
     */
    @Test
    public void stageUuidTest() {
        // TODO: test stageUuid
    }

    /**
     * Test the property 'phoneNumberRequired'
     */
    @Test
    public void phoneNumberRequiredTest() {
        // TODO: test phoneNumberRequired
    }

    /**
     * Test the property 'codes'
     */
    @Test
    public void codesTest() {
        // TODO: test codes
    }

    /**
     * Test the property 'configUrl'
     */
    @Test
    public void configUrlTest() {
        // TODO: test configUrl
    }

    /**
     * Test the property 'deviceChallenges'
     */
    @Test
    public void deviceChallengesTest() {
        // TODO: test deviceChallenges
    }

    /**
     * Test the property 'configurationStages'
     */
    @Test
    public void configurationStagesTest() {
        // TODO: test configurationStages
    }

    /**
     * Test the property 'registration'
     */
    @Test
    public void registrationTest() {
        // TODO: test registration
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'attrs'
     */
    @Test
    public void attrsTest() {
        // TODO: test attrs
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'siteKey'
     */
    @Test
    public void siteKeyTest() {
        // TODO: test siteKey
    }

    /**
     * Test the property 'jsUrl'
     */
    @Test
    public void jsUrlTest() {
        // TODO: test jsUrl
    }

    /**
     * Test the property 'headerText'
     */
    @Test
    public void headerTextTest() {
        // TODO: test headerText
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'additionalPermissions'
     */
    @Test
    public void additionalPermissionsTest() {
        // TODO: test additionalPermissions
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'traceback'
     */
    @Test
    public void tracebackTest() {
        // TODO: test traceback
    }

    /**
     * Test the property 'userFields'
     */
    @Test
    public void userFieldsTest() {
        // TODO: test userFields
    }

    /**
     * Test the property 'passwordFields'
     */
    @Test
    public void passwordFieldsTest() {
        // TODO: test passwordFields
    }

    /**
     * Test the property 'applicationPre'
     */
    @Test
    public void applicationPreTest() {
        // TODO: test applicationPre
    }

    /**
     * Test the property 'flowDesignation'
     */
    @Test
    public void flowDesignationTest() {
        // TODO: test flowDesignation
    }

    /**
     * Test the property 'enrollUrl'
     */
    @Test
    public void enrollUrlTest() {
        // TODO: test enrollUrl
    }

    /**
     * Test the property 'recoveryUrl'
     */
    @Test
    public void recoveryUrlTest() {
        // TODO: test recoveryUrl
    }

    /**
     * Test the property 'passwordlessUrl'
     */
    @Test
    public void passwordlessUrlTest() {
        // TODO: test passwordlessUrl
    }

    /**
     * Test the property 'primaryAction'
     */
    @Test
    public void primaryActionTest() {
        // TODO: test primaryAction
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'showSourceLabels'
     */
    @Test
    public void showSourceLabelsTest() {
        // TODO: test showSourceLabels
    }

    /**
     * Test the property 'slug'
     */
    @Test
    public void slugTest() {
        // TODO: test slug
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

}
